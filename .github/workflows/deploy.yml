# This is a basic workflow to help you get started with Actions

name: Deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs
# job의 이름을 deploy로 설정
  deploy:
  #job을 진행하는 동안 어떤 운영체제에서 할 지를 결정한다.
    runs-on: ubuntu-latest

# job은 여러 step으로 이루어진다 = steps 각 action은 github마켓플레이스에 공유된 것이나 현재 저장소에서 직접 만들어서 사용 가능하다
    
    #checkout action = 워크스페이스에 있는 레퍼지토리에 워크플로우가 접근할 수 있도록 한다.
    steps:
    - name: Checkout source code
      uses: actions/checkout@master

    #setup node.js environment = vue를 실행하기 위해 node 환경을 만든다
    - name: Set up Node.js
      uses: actions/setup-node@master
      with:
        node-version: 16.x
    
    #package.json으로 관련 모듈을 설치한다.
    - name: Install dependencies
      run: npm install
      
    #테스트를 실행한다. ci의 핵심 테스트 자동화⭐️
    - name: Unit Test
      run: npm run test:unit

    #프론트엔드 코드를 빌드한다. dist폴더에 빌드파일이 생성된다.
    - name: Build page
      run: npm run build
      #이때 환경변수는 NODE_ENV=production으로 설정했다.
      env:
        NODE_ENV: production

    #github pages = 정적파일들을 깃헙 페이지에 배포하기 위한 액션이다.
    - name: Deploy to gh-pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        #personal access token이 아님에 주의 runner가 자동으로 토큰을 만들어 워크플로우에 인증한다.따로설정할 필요가 없다는 뜻이다.
        github_token: ${{ secrets.GITHUB_TOKEN }}
        #./dist를 gh-pages 브랜치로 배포한다.
        publish_dir: './dist'
